openapi: 3.0.0
info:
  title: Healthy-Miok
  description: Miok's health care web page
	version: 1.0.0

servers:
	- url: http://miok.site:3001/api
	description: miok.site main api route'

paths:
  /greeting:
    get:
      summary: 인사말 조회
      tags:
        - greeting
      description: 이름을 기입하고 들어간 첫 화면에 인사말(greeting)을 보여주기위해 요청.
      parameters:
      responses:
        '200':
          description: greeting 객체 
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 2
                  content:
                    type: string
                    example: 행복한 하루가 되시기를 바래요! 
        '500':
          description: 데이터베이스 오류 - the request for database greeting is REJECTED! 
        default:
          description: 예상치 못한 오류 - Unexpected error. 

  /blood-sugar:
    post:
      summary: 혈당 등록
      tags:
        - blood-sugar
      description: 새로운 혈당(blood-sugar) 기록을 등록하기 위해 요청. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                today:
                  type: string
                  format: date
                  example: '2020-05-01'
                  description: 오늘 날짜
                when:
                  type: string
                  enum: ['기상 직후', '아침 식전', '아침 식후', '점심 식전', '점심 식후', '저녁 식전', '저녁 식후', '취침 전', '새벽', '기타']
                  example: 기타
                  description: Enum에 있는 요소만 선택 가능
                desc_etc:
                  type: string
                  maxLength: 200
                  example: 새벽 저혈당 확인을 위해 기록했음. 2시
                  description: when 이 '기타'일 경우만 기재
                time: 
                  type: string
                  format: time
                  example: '02:10:00'
                  description: v1.0.0에서는 제외
                date:
                  type: string
                  format: date
                  default: 기록한 시간
                  example: '2020-05-01'
                  description: v1.0.0에서는 제외
                value:
                  type: integer
                  example: 68
                  description: 혈당
                memo: 
                  type: string
                  maxLength: 200
                  default: null
                  example: 혈당 재고나서 바나나, 초콜렛 먹음. 
                  description: 메모하고 싶은 내용을 자유롭게 기재. 
      responses:
        '201':
          description: 등록완료 - New blood-sugar data is CREATED
        '409':
          description: 데이터 이미 존재함 - The blood-sugar data is ALEADY EXIST !
        '500':
          description: 데이터베이스 오류 - the request for database blood_sugar is REJECTED!
        default:
          description: 예상치 못한 오류 - Unexpected error. 

    get:
      summary: 모든 혈당 조회
      tags:
        - blood-sugar
      description: 현재까지 기록한 모든 혈당(blood-sugar) 기록을 가져오기
      responses:
        '200':
          description: 성공 - OK. The requrest for the data is successfully done 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Blood-Sugar'
        '204':
          description: 데이터 없음 - The request for blood_sugar is successfully done, and there is no result data.
        '500':
          description: 데이터 베이스 오류 - The request for database blood_sugar is REJECTED!
        default:
          description: 예상치 못한 오류 - Unexpected error.  

    delete:
      summary: 모든 혈당 삭제
      tags:
        - blood-sugar
      description: 현재까지 기록한 모든 혈당(blood-sugar) 기록을 가져오기
      responses:
        '204':
          description: 성공, 데이터 없음 - The request for the data is successfully done and there is no result data
        '500':
          description: 데이터 베이스 오류 - The request for database blood_sugar is REJECTED!
  
  /blood-sugar/id/{id}:
    get:
      summary: 해당 id 혈당 조회
      tags:
        - blood-sugar
      description: 해당 id 를 가진 혈당(blood-sugar)기록을 가져옴. 
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 258
       
    put:
      summary: 해당 id 혈당 수정
      tags:
        - blood-sugar
      description: 해당 id를 가진 혈당(blood-sugar)기록을 수정함. 
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                today:
                  type: string
                  format: date
                  example: '2020-05-01'
                  description: 오늘 날짜
                when:
                  type: string
                  enum: ['기상 직후', '아침 식전', '아침 식후', '점심 식전', '점심 식후', '저녁 식전', '저녁 식후', '취침 전', '새벽', '기타']
                  example: 기타
                  description: Enum에 있는 요소만 선택 가능
                desc_etc:
                  type: string
                  maxLength: 200
                  example: 새벽 저혈당 확인을 위해 기록했음. 2시
                  description: when 이 '기타'일 경우만 기재
                time: 
                  type: string
                  format: time
                  example: '02:10:00'
                  description: v1.0.0에서는 제외
                date:
                  type: string
                  format: date
                  default: 기록한 시간
                  example: '2020-05-01'
                  description: v1.0.0에서는 제외
                value:
                  type: integer
                  example: 68
                  description: 혈당
                memo: 
                  type: string
                  maxLength: 200
                  default: null
                  example: 혈당 재고나서 바나나, 초콜렛 먹음. 
                  description: 메모하고 싶은 내용을 자유롭게 기재. 
      
    delete:
      summary:
      tags:
        - blood-sugar
  
  /blood-sugar/record:
    get:
      summary:
      tags:
        - blood-sugar
      description:
      parameters:
        - in: query
          name: today
          schema:
            type: date
          required: true
          example: '2020-05-01'
        - in: query
          name: when
          schema:
            type: string
          required: true
          example: '아침 식전'
      responses:
        '200':
          description: 성공
  
  /blood-sugar/date:
    get:
      summary:
      tags:
        - blood-sugar
      description:
      parameters:
        - in: query
          name: startDate
          schema:
            type: date
          required: true
          example: '2020-05-01'
        - in: query
          name: endDate
          schema:
            type: date
          required: true
          example: '2020-05-31'
      reponses:
        '200':
          description: ok
  
  /blood-sugar/date/{today}:
    get:
      summary:
      tags:
        - blood-sugar
      description:
      parameters:
        - in: path
          name: today
          required: true
          schema:
            type: date
          description: 
      responses:
        '200': 
          description: ok
  
  /blood-sugar/when/{when}:
    get: 
      summary:
      tags:
        - blood-sugar
      description:
      parameters:
        - in: path
          name: when
          required: true
          schema:
            type: string
          description: '한개'
      responses:
        '200':
          description: ok
          

# define resuable parameters:
components:
  #----------------------------------
  # Reusable schemas (data models)
  #----------------------------------
  schemas:
    Blood-Sugar:
      type: object
      properties:
        id:
          type: integer
          example: 2
        today:
          type: string
          format: date
          example: '2020-05-01'
        _when:
          type: string
          enum: ['기상 직후', '아침 식전', '아침 식후', '점심 식전', '점심 식후', '저녁 식전', '저녁 식후', '취침 전', '새벽', '기타']
          example: 기타
        desc_etc:
          type: string
          example: 새벽 저혈당 체크 
        _time:
          type: string
          format: time
          example: '02:05:08'
        _date: 
          type: string
          format: date
          example: '2020-05-02'
        _value:
          type: integer
          example: 65
        _status:
          type: integer
          enum: [1, 2, 3, 4, 5]
          description: 1- 저혈당, 2- 초기 저혈당, 3- 정상, 4- 초기 고혈당, 5- 고혈당
          example: 1
        memo: 
          type: string
          example: 2시에 저혈당이 와서 혈당 잼, 바나나, 초콜렛 먹음. 
    
    Blood-Pressure:
      type: object
      properties:
        id: 
          type: integer
          example: 2
        today:
          type: string
          format: date
          example: '2020-05-01'
        _time:
          type: string
          format: time
          example: '21:40:00'
        value_high: 
          type: integer
          example: 121
        value_low:
          type: integer
          example: 85
        value_bpm: 
          type: integer
          example: 78
        _status:
          type: integer
          enum: [0, 1, 2, 3, 4, 5]
          description: 0- 즉시 치료 저혈압, 1- 저혈압, 2- 정상, 3- 고혈압 경증, 4- 고혈압 중증, 5- 즉시 치료 고혈압
          example:  2
          memo:
            type: string
            example: 운동 후 2시간 정도 뒤에 쟀음. 
    
    Insulin:
      type: object
      properties:
        id: 
          type: integer
          example: 2
        today:
          type: string
          format: date
          example: '2020-05-01'
        _when:
          type: string
          enum: ['아침 식전', '점심 식전', '저녁 식전', '기타1', '기타2', '기타3']
          example: 기타1
        desc_etc:
          type: string
          example: 취침 전
        _time:
          type: string
          format: time
          example: '15:11:33'
        _type: 
          type: string
          enum: ['트레시바(지속성)', '노보래피드(속효성)']
          example: 노보래피드
        unit:
          type: integer
          example: 4
        memo: 
          type: string
          example: 간식으로 아이스크림 먹어서 맞음. 
  
  responses:
    200:
      description: 성공 - OK. The requrest for the data is successfully done
    201:
      description: 등록 완료 - New data is created
    204:
      description: 성공, 데이터 없음 - The request for the data is successfully done and there is no result data
    409:
      description: 데이터 이미 존재 - The data is ALREADY EXIST!
    500:
      description: 데이터 베이스 오류 - The request for database is REJECTED !
    default:
      description: 예상치 못한 오류 - Unexpected error.
